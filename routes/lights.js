const _0x239fc6 = _0x5d54; (function (_0x45edb2, _0x3a3838) { const _0x5ce8dc = _0x5d54, _0x28d496 = _0x45edb2(); while (!![]) { try { const _0x30dd82 = (parseInt(_0x5ce8dc(0x13a)) / 0x1) * (parseInt(_0x5ce8dc(0x114)) / 0x2) + (-parseInt(_0x5ce8dc(0xf6)) / 0x3) * (parseInt(_0x5ce8dc(0x10e)) / 0x4) + (parseInt(_0x5ce8dc(0xf4)) / 0x5) * (parseInt(_0x5ce8dc(0x110)) / 0x6) + parseInt(_0x5ce8dc(0x125)) / 0x7 + (parseInt(_0x5ce8dc(0x12f)) / 0x8) * (parseInt(_0x5ce8dc(0x104)) / 0x9) + (-parseInt(_0x5ce8dc(0x12a)) / 0xa) * (-parseInt(_0x5ce8dc(0x13d)) / 0xb) + (parseInt(_0x5ce8dc(0x127)) / 0xc) * (-parseInt(_0x5ce8dc(0x11a)) / 0xd); if (_0x30dd82 === _0x3a3838) break; else _0x28d496["push"](_0x28d496["shift"]()); } catch (_0x4056dd) { _0x28d496["push"](_0x28d496["shift"]()); } } })(_0x1ec6, 0xd0102); var express = require(_0x239fc6(0x161)), router = express[_0x239fc6(0x151)](), net = require(_0x239fc6(0xfe)); const modbus = require("jsmodbus"), SOCKET_TIMEOUT_DURATION = 0xfa0, PORT = 0x50, lights = [ { ip: _0x239fc6(0x113), name: "L1" }, { ip: _0x239fc6(0x119), name: "R1" }, { ip: _0x239fc6(0x10b), name: "L2" }, { ip: "10.13.25.43", name: "R2" }, { ip: _0x239fc6(0x143), name: "L3" }, { ip: _0x239fc6(0xee), name: "R3" }, { ip: _0x239fc6(0x103), name: "L4" }, { ip: "10.13.25.47", name: "R4" }, { ip: _0x239fc6(0x132), name: "L5" }, { ip: "10.13.25.49", name: "R5" }, { ip: _0x239fc6(0x115), name: "L6" }, { ip: _0x239fc6(0x142), name: "R6" }, { ip: _0x239fc6(0x155), name: "L7" }, { ip: _0x239fc6(0x131), name: "R7" }, { ip: _0x239fc6(0x130), name: "L8" }, { ip: _0x239fc6(0xf1), name: "R8" }, { ip: _0x239fc6(0x116), name: "L9" }, { ip: _0x239fc6(0xf0), name: "R9" }, { ip: _0x239fc6(0xf8), name: _0x239fc6(0x129) }, { ip: _0x239fc6(0xf2), name: "R10" }, { ip: "10.13.25.60", name: "L11" }, { ip: _0x239fc6(0x133), name: _0x239fc6(0x13f) }, { ip: _0x239fc6(0x122), name: _0x239fc6(0xeb) }, { ip: _0x239fc6(0x10c), name: _0x239fc6(0x10a) }, { ip: _0x239fc6(0xea), name: _0x239fc6(0x138) }, { ip: _0x239fc6(0x111), name: _0x239fc6(0x159) }, { ip: _0x239fc6(0x144), name: _0x239fc6(0x13e) }, { ip: _0x239fc6(0x118), name: _0x239fc6(0x13c) }, { ip: _0x239fc6(0x11d), name: _0x239fc6(0xef) }, { ip: _0x239fc6(0x11f), name: "R15" }, { ip: _0x239fc6(0x105), name: "L16" }, { ip: _0x239fc6(0x136), name: _0x239fc6(0xfc) }, { ip: _0x239fc6(0x14f), name: _0x239fc6(0xfc) }, { ip: "10.13.25.73", name: _0x239fc6(0xfc) }, { ip: _0x239fc6(0x148), name: "R16" }, { ip: _0x239fc6(0x145), name: "R15" }, { ip: _0x239fc6(0x158), name: "K1" }, { ip: _0x239fc6(0x154), name: "K2" }, { ip: _0x239fc6(0x101), name: "K3" }, { ip: _0x239fc6(0x112), name: "K4" }, { ip: _0x239fc6(0x141), name: "K5" }, { ip: "10.13.25.81", name: "K6" }, { ip: "10.13.25.82", name: "K7" }, { ip: _0x239fc6(0x156), name: "K8" }, { ip: _0x239fc6(0x10d), name: "K9" }, { ip: _0x239fc6(0x15f), name: "K10" }, { ip: _0x239fc6(0x120), name: "K11" }, { ip: _0x239fc6(0xfa), name: _0x239fc6(0x150) }, { ip: _0x239fc6(0xec), name: _0x239fc6(0x124) }, { ip: _0x239fc6(0xff), name: _0x239fc6(0x152) }, { ip: _0x239fc6(0x139), name: "K15" }, { ip: _0x239fc6(0xf5), name: _0x239fc6(0x128) }, { ip: _0x239fc6(0x14e), name: "K17" }, { ip: "10.13.25.93", name: "K18" }, { ip: _0x239fc6(0x117), name: _0x239fc6(0x123) }, { ip: _0x239fc6(0x15c), name: _0x239fc6(0xf3), seperatePlc: !![] }, { ip: _0x239fc6(0x15d), name: _0x239fc6(0xed), seperatePlc: !![] }, { ip: "10.13.25.98", name: _0x239fc6(0xfd), seperatePlc: !![] }, { ip: _0x239fc6(0x160), name: _0x239fc6(0x153), seperatePlc: !![] }, { ip: _0x239fc6(0x126), name: _0x239fc6(0x12b), seperatePlc: !![] }, { ip: _0x239fc6(0x109), name: _0x239fc6(0x13b), seperatePlc: !![] }, { ip: "10.13.25.102", name: _0x239fc6(0xf7), seperatePlc: !![] }, { ip: _0x239fc6(0x157), name: _0x239fc6(0x137) }, ], currentReqMap = {}, statusMap = {}, lightsMap = {}; lights[_0x239fc6(0xfb)]((_0x535af8) => { const _0x3ec823 = _0x239fc6; (statusMap[_0x535af8[_0x3ec823(0x107)]] = { redStatus: "0", yellowStatus: "0", greenStatus: "0", }), (lightsMap[_0x535af8[_0x3ec823(0x107)]] = _0x535af8); }); const sound = require(_0x239fc6(0x12e)), path = require(_0x239fc6(0x12d)), redSoundFilePath = path["join"](__dirname, "Alert2.mp3"), yellowSoundFilePath = path[_0x239fc6(0xf9)](__dirname, "Alert5.mp3"); let isRedSoundPlaying = ![], isYellowSoundPlaying = ![]; async function startRedSound() { const _0x291e2a = _0x239fc6; (isRedSoundPlaying = !![]), await sound[_0x291e2a(0x146)](redSoundFilePath), (isRedSoundPlaying = ![]); } function _0x1ec6() { const _0x2b9616 = [ "9mqZifX", "10.13.25.70", "yellowStatus", "name", "close", "10.13.25.101", "R12", "10.13.25.42", "10.13.25.63", "10.13.25.84", "4oCZKjp", "end", "3086862lmELhE", "10.13.25.65", "10.13.25.79", "10.13.25.40", "290710XLDFIF", "10.13.25.50", "10.13.25.56", "10.13.25.94", "10.13.25.67", "10.13.25.41", "955396btFQdB", "client", "seperatePlc", "10.13.25.68", "destroy", "10.13.25.69", "10.13.25.86", "/status", "10.13.25.62", "K19", "K13", "3587269BAxBYK", "10.13.25.100", "108lBGinK", "K16", "L10", "10bdEXtT", "FL5", "get", "path", "sound-play", "1979960cRuTLW", "10.13.25.54", "10.13.25.53", "10.13.25.48", "10.13.25.61", "then", "catch", "10.13.25.71", "K20", "L13", "10.13.25.90", "4jfQFuc", "FL6", "R14", "2927111gYcEcW", "L14", "R11", "error", "10.13.25.80", "10.13.25.51", "10.13.25.44", "10.13.25.66", "10.13.25.75", "play", "Socket", "10.13.25.74", "exports", "redStatus", "STATUS\x0d", "10.13.25.105", "R:1\x0d", "10.13.25.92", "10.13.25.72", "K12", "Router", "K14", "FL4", "10.13.25.77", "10.13.25.52", "10.13.25.83", "192.168.43.31", "10.13.25.76", "R13", "includes", "writeHoldingRegister", "10.13.25.96", "10.13.25.97", "connect", "10.13.25.85", "10.13.25.99", "express", "10.13.25.64", "L12", "10.13.25.88", "FL2", "10.13.25.45", "L15", "10.13.25.57", "10.13.25.55", "10.13.25.59", "FL1", "5DRGlzi", "10.13.25.91", "1824918icbGjk", "FL7", "10.13.25.58", "join", "10.13.25.87", "forEach", "R16", "FL3", "net", "10.13.25.89", "TCP", "10.13.25.78", "write", "10.13.25.46", ]; _0x1ec6 = function () { return _0x2b9616; }; return _0x1ec6(); } async function startYellowSound() { (isYellowSoundPlaying = !![]), await sound["play"](yellowSoundFilePath), (isYellowSoundPlaying = ![]); } lights["forEach"]((_0x15c670) => pollStatus(_0x15c670)); function pollStatus(_0x5cd282) { setInterval(() => getStatus(_0x5cd282), 0x3e8); } const pcbIp = "10.13.25.103", pcbIp2 = "10.13.25.95", socketMap = {}; createPcbSocket(pcbIp), createPcbSocket(pcbIp2); function startPcbsocket(_0x3f93a8, _0x23d030, _0x2e6f74) { const _0x4dfd11 = _0x239fc6; if (_0x2e6f74) { const _0x812335 = new net[_0x4dfd11(0x147)](), _0x7ea414 = { host: _0x4dfd11(0x14c), port: "80" }, _0x298aea = new modbus[_0x4dfd11(0x11b)][_0x4dfd11(0x100)](_0x812335); _0x812335["on"](_0x4dfd11(0x15e), function () { const _0x18668e = _0x4dfd11; _0x298aea[_0x18668e(0x15b)](0x1, _0x23d030) [_0x18668e(0x134)](function (_0x1df3de) { const _0x5da5d7 = _0x18668e; _0x812335[_0x5da5d7(0x10f)](); }) [_0x18668e(0x135)](function () { const _0xea8868 = _0x18668e; _0x812335[_0xea8868(0x10f)](); }); }), _0x812335["on"](_0x4dfd11(0x140), () => {}), _0x812335[_0x4dfd11(0x15e)](_0x7ea414); } if (!socketMap[_0x3f93a8]) return; socketMap[_0x3f93a8][_0x4dfd11(0x102)]( _0x23d030 ? _0x4dfd11(0x14d) : "R:0\x0d"); } function _0x5d54(_0x3f3043, _0x3734dc) { const _0x1ec61a = _0x1ec6(); return ( (_0x5d54 = function (_0x5d5401, _0x2cd30a) { _0x5d5401 = _0x5d5401 - 0xea; let _0x80bb27 = _0x1ec61a[_0x5d5401]; return _0x80bb27; }), _0x5d54(_0x3f3043, _0x3734dc)); } function createPcbSocket(_0x4c9b6a) { const _0x3cb5fb = _0x239fc6, _0x466ce4 = new net[_0x3cb5fb(0x147)](); _0x466ce4["connect"](PORT, _0x4c9b6a, function () { socketMap[_0x4c9b6a] = _0x466ce4; }), _0x466ce4["on"](_0x3cb5fb(0x140), function (_0x2778dd) { const _0x3c6b26 = _0x3cb5fb; _0x466ce4[_0x3c6b26(0x11e)](), (socketMap[_0x4c9b6a] = null), createPcbSocket(_0x4c9b6a); }); } function initPcbPolling() { setInterval(() => { const _0x3d6aeb = _0x5d54; let _0x1fcfc4 = ![], _0x332f83 = ![], _0x3003f7 = ![]; for (const _0x3e1552 in statusMap) { if ( statusMap[_0x3e1552]["redStatus"] === "1" && !lightsMap[_0x3e1552][_0x3d6aeb(0x11c)]) { _0x1fcfc4 = !![]; break; } } for (const _0x43639b in statusMap) { statusMap[_0x43639b][_0x3d6aeb(0x14a)] === "1" && (_0x332f83 = !![]), statusMap[_0x43639b][_0x3d6aeb(0x106)] === "1" && (_0x3003f7 = !![]); } if (_0x332f83) !isRedSoundPlaying && startRedSound(); else _0x3003f7 && !isYellowSoundPlaying && startYellowSound(); startPcbsocket(pcbIp, _0x1fcfc4, !![]); }, 0x1f4); } function initPcbPolling2() { setInterval(() => { const _0x44d57a = _0x5d54; let _0x4e9129 = ![]; for (const _0x430a36 in statusMap) { if ( statusMap[_0x430a36][_0x44d57a(0x14a)] === "1" && lightsMap[_0x430a36]["seperatePlc"]) { _0x4e9129 = !![]; break; } } startPcbsocket(pcbIp2, _0x4e9129, ![]); }, 0x1f4); } initPcbPolling(), initPcbPolling2(); function getStatus(_0x33b8cd) { const _0x5abbcc = _0x239fc6, _0x4c2390 = _0x33b8cd["ip"], _0x473dd9 = _0x33b8cd[_0x5abbcc(0x107)]; if (currentReqMap[_0x4c2390]) return; currentReqMap[_0x4c2390] = 0x1; var _0x266b4c, _0x432fbb, _0x55bbcb, _0x2d78ec = "", _0x2a699e = new net[_0x5abbcc(0x147)](), _0x2527f8 = setTimeout(() => { const _0x24ba17 = _0x5abbcc; _0x2a699e[_0x24ba17(0x11e)](), (statusMap[_0x473dd9] = { redStatus: "0", yellowStatus: "0", greenStatus: "0", }); }, SOCKET_TIMEOUT_DURATION); _0x2a699e[_0x5abbcc(0x15e)](PORT, _0x4c2390, function () { const _0x2b7d68 = _0x5abbcc; _0x2a699e[_0x2b7d68(0x102)](_0x2b7d68(0x14b)); }), _0x2a699e["on"]("data", function (_0x494691) { const _0xf2b081 = _0x5abbcc; (_0x2d78ec += _0x494691), (_0x494691[_0xf2b081(0x15a)]("BLUE") || _0x494691[_0xf2b081(0x15a)]("GREEN")) && (clearTimeout(_0x2527f8), (_0x266b4c = _0x2d78ec[0x4]), (_0x432fbb = _0x2d78ec[0xe]), (_0x55bbcb = _0x2d78ec[0x17]), _0x2a699e[_0xf2b081(0x11e)](), (statusMap[_0x473dd9] = { redStatus: _0x266b4c, yellowStatus: _0x432fbb, greenStatus: _0x55bbcb, }), (currentReqMap[_0x4c2390] = 0x0)); }), _0x2a699e["on"](_0x5abbcc(0x108), function () { currentReqMap[_0x4c2390] = 0x0; }), _0x2a699e["on"](_0x5abbcc(0x140), function (_0x4aa6a6) { currentReqMap[_0x4c2390] = 0x0; }); } router[_0x239fc6(0x12c)]( _0x239fc6(0x121), function (_0x27e7fc, _0x8c00bc, _0x5e5820) { _0x8c00bc["json"](statusMap); }), (module[_0x239fc6(0x149)] = router);